/*
 * Auto-generated by: https://github.com/pmndrs/gltfjsx
 */

import type { Mesh, Group } from 'three';
import { useGLTF } from '@react-three/drei';
import { useFrame } from '@react-three/fiber';
import { useRef } from 'react';

export function FanDock(props: JSX.IntrinsicElements['group']) {
  const ref = useRef<Group>(undefined!);
  const { nodes } = useGLTF('/gltf/cooling-system/fan-dock.glb');
  const mesh_0 = nodes.mesh_0 as Mesh;

  useFrame(state => {
    const t = state.clock.getElapsedTime();
    ref?.current?.rotation.set(
      Math.sin(t / 2) / 2,
      Math.cos(t / 4) / 2,
      0.15 + Math.sin(t / 2) / 8
    );
    ref?.current?.position?.set(
      ref?.current?.position.x,
      ref?.current?.position.y,
      (0.5 + Math.cos(t / 2)) / 7
    );
  });

  return (
    <group ref={ref} {...props} dispose={null}>
      <mesh geometry={mesh_0.geometry} material={mesh_0.material} />
    </group>
  );
}

useGLTF.preload('/gltf/cooling-system/fan-dock.glb');
